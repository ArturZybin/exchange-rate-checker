{"version":3,"sources":["components/CurrencyChart.tsx","components/Title.tsx","components/Calculator.tsx","App.tsx","index.tsx"],"names":["CurrencyChart","data","base","currency","useEffect","months","i","date","Date","setMonth","getMonth","push","toLocaleString","month","canvas","document","getElementById","Chart","getContext","type","labels","datasets","label","backgroundColor","borderColor","borderWidth","drawChart","id","className","Title","rate","Calculator","useState","baseValue","setBaseValue","currencyValue","setCurrencyValue","toString","value","onChange","event","validateInput","currentTarget","input","length","parseFloat","indexOf","slice","App","currencies","setCurrencies","currencyData","setSecondCurrencyData","fetchCurrencies","then","fetchCurrencyData","currentRate","baseFullName","currencyFullName","a","fetch","response","ok","console","error","json","fetchPromises","getFetchCurrencyDataPromises","Promise","all","responsesData","forEach","rates","reverse","currentDate","toJSON","url","URL","searchParams","set","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.86597a85.chunk.js","sourcesContent":["import React, { useEffect } from 'react'\nimport Chart from 'chart.js'\n\n\ninterface IProps {\n   data: number[],\n   base: string,\n   currency: string\n}\n\nexport const CurrencyChart: React.FC<IProps> = ({ data, base, currency }) => {\n   useEffect(() => {\n      const months: string[] = []\n\n      for (let i = 0; i < 7; i++) {\n         const date = new Date();\n         date.setMonth(date.getMonth() - i)\n         months.push(date.toLocaleString('default', { month: 'long' }))\n      }\n\n      drawChart(data, base, currency, months)\n   }, [data, base, currency])\n\n   return (\n      <canvas id=\"chart\" className=\"chart\"></canvas>\n   )\n}\n\n\nfunction drawChart(data: number[], base: string, currency: string, months: string[]) {\n   const canvas: any = document.getElementById('chart')\n   if (!canvas) return\n\n   new Chart(canvas.getContext('2d'), {\n      type: 'line',\n      data: {\n         labels: months,\n         datasets: [{\n            label: `${currency} in ${base}`,\n            data,\n            backgroundColor: 'rgba(255, 99, 132, 0.2)',\n            borderColor: 'rgba(255, 99, 132, 1)',\n            borderWidth: 1\n         }]\n      }\n   })\n}","import React from 'react'\n\ninterface IProps {\n   base: string,\n   currency: string,\n   rate: number\n}\n\nexport const Title: React.FC<IProps> = ({ base, currency, rate }) => (\n   <div className=\"title\">\n      <h2 className=\"title__small\">1 {base} equals</h2>\n      <h1 className=\"title__big\">{rate} {currency}</h1>\n   </div>\n)","import React, { useState, useEffect } from 'react'\n\n\nexport const Calculator: React.FC<{ rate: number }> = ({ rate }) => {\n   const [baseValue, setBaseValue] = useState<string>('1')\n   const [currencyValue, setCurrencyValue] = useState<string>('')\n\n   useEffect(() => {\n      if (!rate) return\n      setBaseValue('1')\n      setCurrencyValue((1 * rate).toString())\n   // eslint-disable-next-line react-hooks/exhaustive-deps\n   }, [rate])\n\n   function handleBaseChange(event: React.FormEvent<HTMLInputElement>): void {\n      const value = validateInput(event.currentTarget.value)\n      setBaseValue( value )\n      setCurrencyValue( validateInput( (+value * rate).toString()) )\n   }\n\n   function handleCurrencyChange(event: React.FormEvent<HTMLInputElement>): void {\n      const value = validateInput(event.currentTarget.value)\n      setCurrencyValue( value )\n      setBaseValue( validateInput( (+value / rate).toString()) )\n   }\n\n   return (\n      <div className=\"calculator\">\n         <input\n            className=\"calculator__base\"\n            value={baseValue}\n            onChange={handleBaseChange}\n            type=\"text\"\n         />\n         <input\n            className=\"calculator__currency\"\n            value={currencyValue}\n            onChange={handleCurrencyChange}\n            type=\"text\"\n         />\n      </div>\n   )\n}\n\n\nfunction validateInput(input: string): string {\n   if (!input) return ''\n\n   if (input[input.length - 1] === '.' || input[input.length - 1] === ',') {\n      return input\n   }\n\n   let value = parseFloat(input).toString()\n   if (value === 'NaN' || value === 'Infinity') {\n      value = ''\n   }\n\n   if (value.indexOf('.') !== -1 && value.length - 1 - value.indexOf('.') > 5) {\n      value = value.slice(0, value.indexOf('.') + 6)\n   }\n\n   return value\n}","import React, { useState, useEffect } from 'react';\nimport { TCurrencies } from './typescript-types';\n\nimport { CurrencyChart } from './components/CurrencyChart';\nimport { Title } from './components/Title';\nimport { Calculator } from './components/Calculator';\n\n\nexport const App: React.FC = () => {\n   const [currencies, setCurrencies] = useState<TCurrencies>()\n   const [base, setBase] = useState<string>('USD')\n   const [currency, setCurrency] = useState<string>('RUB')\n   const [currencyData, setSecondCurrencyData] = useState<number[]>()\n\n\n   useEffect(() => {\n      fetchCurrencies().then(setCurrencies)\n   }, [])\n\n   useEffect(() => {\n      fetchCurrencyData(base, currency)\n         .then(setSecondCurrencyData)\n   }, [base, currency])\n\n\n   let baseFullName = base\n   let currencyFullName = currency\n   if (currencies) {\n      baseFullName = (currencies as {[key: string]: any} )[base]\n      currencyFullName = (currencies as {[key: string]: any} )[currency]\n   }\n\n   let currentRate\n   if (currencyData) {\n      currentRate = currencyData[currencyData.length - 1]\n   }\n\n   return (\n      <div className=\"app\">\n         <Title\n            base={baseFullName}\n            currency={currencyFullName}\n            rate={currentRate as number}\n         />\n         <Calculator rate={currentRate as number} />\n         <CurrencyChart\n            data={currencyData as number[]}\n            base={baseFullName}\n            currency={currencyFullName}\n         />\n      </div>\n   );\n}\n\n\n\nasync function fetchCurrencies() {\n   let data: TCurrencies\n\n   const response = await fetch('https://openexchangerates.org/api/currencies.json')\n   if (!response.ok) {\n      console.error('Error loading currencies')\n   }\n   data = await response.json()\n\n   return data\n}\n\n\nasync function fetchCurrencyData(base: string, currency: string) {\n   const currencyData: number[] = []\n\n   const fetchPromises = getFetchCurrencyDataPromises(base, currency)\n\n   await Promise.all(fetchPromises).then((responsesData) => {\n      responsesData.forEach((data) => currencyData.push(data.rates[currency]))\n   })\n\n   return currencyData.reverse()\n}\n\n\nfunction getFetchCurrencyDataPromises(base: string, currency: string): Promise<any>[] {\n   const fetchPromises = [] as Promise<any>[]\n\n   for (let i = 0; i < 7; i++) {\n      const currentDate = new Date()\n      currentDate.setMonth(currentDate.getMonth() - i)\n      const date = currentDate.toJSON().slice(0, 10)\n\n      const url = new URL('https://openexchangerates.org/api/historical/' + date + '.json')\n      url.searchParams.set('app_id', '814335798c7149bfb3caad3be6e1acb2')\n      url.searchParams.set('base', base)\n      url.searchParams.set('symbols', currency)\n\n      fetchPromises.push(\n         fetch(url.toString()).then((response) => {\n            if (!response.ok) {\n               console.error('Error loading currency data')\n            }\n            return response.json()\n         })\n      )\n   }\n\n   return fetchPromises\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n   <React.StrictMode>\n      <App />\n   </React.StrictMode>,\n   document.getElementById('root')\n);"],"sourceRoot":""}